{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/services.jsx","components/image.jsx","components/gallery.jsx","components/intro.jsx","components/intro2.jsx","components/Team.jsx","components/contact.jsx","components/features.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","src","alt","toggle","Header","data","title","paragraph","About","Why","map","d","i","Why2","Services","target","rel","Image","largeImage","smallImage","data-lightbox-gallery","Gallery","Intro","Intro2","paragraph2","Team","img","name","job","initialState","email","message","Contact","useState","twitter","twitter2","Features","text","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.623879a2.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top '>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n         \n          <a className='navbar-brand page-scroll' href='#page-top'>\n            FREEDOMojis \n          </a>{' '}\n          <img className=\"mainImage\" src=\"/img/icons/MAIN.png\" alt=\"emoji\" />\n        \n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n          data-toggle='collapse'\n          toggle=\"collapse\" data-target=\".navbar-collapse\"\n          \n        >\n          <ul className='nav navbar-nav navbar-right' toggle='collapse'>\n            {/* <li>\n              <a href='#' >\n                Opensea\n              </a>\n            </li> */}\n            {/* <li>\n              <a href='' target=\"_blank\" rel=\"noreferrer\">\n                Buy on Opensea\n              </a>\n            </li> */}\n            <li>\n              <a href='#info' className='page-scroll'>\n                About\n              </a>\n            </li>\n            <li>\n              <a href='#team' className='page-scroll'>\n                Team\n              </a>\n            </li>           \n            <li>\n              <a href='#portfolio' className='page-scroll'>\n                Gallery\n              </a>\n            </li>\n            {/* <li>\n              <a href='#about' className='page-scroll'>\n                Shop\n              </a>\n            </li> */}\n            <li>\n              <a href='#contact' className='page-scroll'>\n                Contact\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                {/* <a\n                  href='#features'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Mint\n                </a>{' '} */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id=\"about\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {/*<div className=\"col-xs-12 col-md-6\">\n          //add if needed\n            {\" \"}\n            <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />{\" \"}  \n  </div> */}\n          <div className=\"col-xs-12 col-md-12\">\n            <div className=\"section-title text-center\">\n              <h2>Shop - coming soon!</h2>\n              <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n              {/* <h3>What will be available in the shop?</h3> */}\n              <div className=\"list-style\">\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n                <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : \"loading\"}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const Services = (props) => {\n  return (\n    \n    <div id='services' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Join Us and Let Freedom Ring</h2>\n          {/* <p>\n          \n          </p> */}\n        </div>\n        <div className='row'>\n            <div className='col-md-6'>\n            <a href=\"https://discord.gg/RKjsYfRbJg\" target=\"_blank\" rel=\"noreferrer\">\n                  <i className=\"fab fa-discord\"></i>\n                    </a>\n                    <h3>Discord</h3>\n                    <p>Jump in our community and give us a 👋</p>\n            </div>\n            <div className='col-md-6'>\n            <a href=\"https://twitter.com/FreedoMojis\" target=\"_blank\" rel=\"noreferrer\">\n                  <i className=\"fa fa-twitter\"></i>\n                    </a>\n                    <h3>Twitter</h3>\n                    <p>Let's spread the word, one Tweet at a time 🐦</p>\n            </div>  \n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Image = ({ title, largeImage, smallImage }) => {\n  return (\n    <div className='portfolio-item'>\n      <div className='hover-bg'>\n        {' '}\n        <a\n          href={largeImage}\n          title={title}\n          data-lightbox-gallery='gallery1'\n        >\n          <div className='hover-text'>\n            <h4>{title}</h4>\n          </div>\n          <img\n            src={smallImage}\n            className='img-responsive'\n            alt={title}\n          />{' '}\n        </a>{' '}\n      </div>\n    </div>\n  )\n}","import { Image } from \"./image\";\n\nexport const Gallery = (props) => {\n  return (\n    <div id='portfolio' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Gallery</h2>\n          <p>\n            With millions of combinations, your NFT will always be unique.\n          </p>\n        </div>\n        <div className='row'>\n          <div className='portfolio-items'>\n            {props.data\n              ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-sm-6 col-md-4 col-lg-4'>\n                  \n                  <Image title={d.title} largeImage={d.largeImage} smallImage={d.smallImage} />\n                </div>\n              ))\n              : 'Loading...'}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Intro = (props) => {\n    \n    return (\n    \n      <div id=\"info\">\n        <div className=\"container introCont\">\n          <div className=\"row\">\n            {/* <div className=\"col-xs-12 col-md-6\">\n              {\" \"}\n              <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />{\" \"}\n            </div> */}\n            <div className=\"col-xs-12 col-md-12 col-lg-12\">\n              <div className=\"section-title text-center\">\n                <h2>What are FREEDOMojis</h2>\n                <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n                {/* <p>{props.data ? props.data.secondP : \"loading...\"}</p> */}\n                {/* Mission statememnt below */}\n                {/* <h2>Mission</h2>\n                <p>{props.data ? props.data.secondP : \"loading...\"}</p> */}\n                {/* <div className=\"list-style\">\n                  <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                    <ul>\n                      {props.data\n                        ? props.data.Why.map((d, i) => (\n                            <li key={`${d}-${i}`}>{d}</li>\n                          ))\n                        : \"loading\"}\n                    </ul>\n                  </div>\n                  <div className=\"col-lg-6 col-sm-6 col-xs-12\">\n                    <ul>\n                      {props.data\n                        ? props.data.Why2.map((d, i) => (\n                            <li key={`${d}-${i}`}> {d}</li>\n                          ))\n                        : \"loading\"}\n                    </ul>\n                  </div>\n                </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  ","export const Intro2 = (props) => {\r\n    \r\n    return (\r\n    \r\n      <div id=\"info2\">\r\n        <div className=\"container introCont\">\r\n          <div className=\"row\">\r\n            {/* <div className=\"col-xs-12 col-md-6\">\r\n              {\" \"}\r\n              <img src=\"img/about.png\" className=\"img-responsive\" alt=\"\" />{\" \"}\r\n            </div> */}\r\n            <div className=\"col-xs-12 col-md-12 col-lg-12\">\r\n              <div className=\"section-title text-center\">\r\n                <h2>Why Now</h2>\r\n                <p>{props.data ? props.data.paragraph2 : \"loading...\"}</p>\r\n                {/* <p>{props.data ? props.data.secondP : \"loading...\"}</p> */}\r\n                {/* Mission statememnt below */}\r\n                {/* <h2>Mission</h2>\r\n                <p>{props.data ? props.data.secondP : \"loading...\"}</p> */}\r\n                {/* <div className=\"list-style\">\r\n                  <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                    <ul>\r\n                      {props.data\r\n                        ? props.data.Why.map((d, i) => (\r\n                            <li key={`${d}-${i}`}>{d}</li>\r\n                          ))\r\n                        : \"loading\"}\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"col-lg-6 col-sm-6 col-xs-12\">\r\n                    <ul>\r\n                      {props.data\r\n                        ? props.data.Why2.map((d, i) => (\r\n                            <li key={`${d}-${i}`}> {d}</li>\r\n                          ))\r\n                        : \"loading\"}\r\n                    </ul>\r\n                  </div>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  ","export const Team = (props) => {\n  return (\n    <div id='team' className='text-center'>\n      <div className='container'>\n        <div className='col-md-8 col-md-offset-2 section-title'>\n          <h2>Team & Story</h2>\n          <p>\n          All of the art was created by my 8 year old daughter and I.  In November, I showed my daughter the CryptoPunk collection and the first question she asked was if we could make a pixel art emoji collection.  This idea immediately motivated me do dive into solidity and understand how smart contracts work so I could start developing and building in this space. I am very passionate about the NFT community and am looking forward to growing in this space.  If you do not agree with this cause and project, I respect your beliefs and believe we can agree, to disagree and be civil adults.  The question is, how will I get labeled when others don't agree with my project and beliefs?  Time will tell.  I appreciate you all and let FREEDOM RING!          \n           </p>\n        </div>\n        <div id='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-sm-6 team'>\n                  <div className='thumbnail'>\n                    {' '}\n                    <img src={d.img} alt='...' className='team-img' />\n                    <div className='caption'>\n                      <h4>{d.name}</h4>\n                      <p>{d.job}</p>\n                    </div>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react';\nimport emailjs from 'emailjs-com';\n\nconst initialState = {\n  name: '',\n  email: '',\n  message: '',\n}\nexport const Contact = (props) => {\n  const [{ name, email, message }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setState((prevState) => ({ ...prevState, [name]: value }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(name, email, message)\n    emailjs\n      .sendForm(\n        'YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID'\n      )\n      .then(\n        (result) => {\n          console.log(result.text)\n          clearState()\n        },\n        (error) => {\n          console.log(error.text)\n        }\n      )\n  }\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          \n          \n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.twitter : '/'} target=\"_blank\" rel=\"noreferrer\">\n                    <i className=\"fab fa-twitter\"></i>\n                      <img className=\"icons\" src=\"/img/icons/twitter.png\" alt=\"React Logo\" />\n                       \n                    </a>\n                  </li>\n                  <li><p>\n            &copy; 2021 FREEDOMojis NFT\n          </p></li>\n                  <li>\n                    <a href={props.data ? props.data.twitter2 : '/'} target=\"_blank\" rel=\"noreferrer\">\n                    <i className=\"fab fa-twitter\"></i>\n                      <img className=\"icons\" src=\"/img/icons/twitter.png\" alt=\"React Logo\" />                      \n                    </a>\n                  </li>\n                  \n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n","export const Features = (props) => {\n  return (\n    <div id='features' className='text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>How are FREEDOMojis created?</h2>\n          <p>There are 6 layers to each FREEDOMoji.  Each layer has multiple traits options but each FREEDOMoji will randomly receive 1 trait per layer.  There are over 100 different traits which will make each NFT unique to the collection.</p>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-4 col-lg-2'>\n                  {' '}\n\n                  <img src={d.img} alt={d.title} className='layerImg' />\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                  <br/>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\n// import { Features } from \"./components/features\";\nimport { About } from \"./components/about\";\nimport { Services } from \"./components/services\";\nimport { Gallery } from \"./components/gallery\";\nimport { Intro } from \"./components/intro\";\nimport { Intro2 } from \"./components/intro2\";\nimport { Team } from \"./components/Team\";\nimport { Contact } from \"./components/contact\";\nimport { Features } from \"./components/features\";\nimport { Testimonials } from \"./components/testimonials\"\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation />\n      <Header data={landingPageData.Header} />\n      <Intro data={landingPageData.Intro} />  \n      <Intro2 data={landingPageData.Intro2} />\n         \n      <Features data={landingPageData.Features} />\n      <Team data={landingPageData.Team} />\n      <Services data={landingPageData.Services} />\n     \n      <Gallery data={landingPageData.Gallery}/>\n      {/* shop */}\n      <About data={landingPageData.About} />\n      <Contact data={landingPageData.Contact} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}